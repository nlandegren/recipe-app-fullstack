@page
@model FullStackRecipeApp.Pages.Recipes.DetailsModel

@{
    ViewData["Title"] = "Details";
}


<div class="recipe-title">

    <h1>@Html.DisplayFor(model => model.Recipe.Name)</h1>
</div>
<hr />

<div class="recipe-description">
    <h2>@Html.DisplayFor(model => model.Recipe.Description)</h2>
</div>

<hr />
<div class="recipe-instructions">

    <h2>Svårighetsgrad: @Model.Recipe.Difficulty/5</h2>
</div>

<div class="recipe-instructions">

    <h2>Instruktioner</h2>
    <h3 class="recipe-instruction-steps">@Html.DisplayFor(modelItem => Model.Recipe.Instructions)</h3>
</div>

<div class="recipe-ingredients">
    <h2>Ingredienser</h2>
    <ul>
        @foreach (var quantity in Model.Quantities)
        {

            <li>
                @Html.DisplayFor(modelItem => quantity.Ingredient.Name)

                @Html.DisplayFor(modelItem => quantity.Amount)

                @Html.DisplayFor(modelItem => quantity.Measurement.Name)
            </li>
        }
    </ul>
</div>
<hr />


@if (Model.AccessControl.IsLoggedIn() && Model.AccessControl.UserHasAccess(Model.Recipe))
{
    <div class="bottom-buttons">
        <a asp-page="./Index">Tillbaka till alla recept</a>
        <a asp-page="./Edit" asp-route-id="@Model.Recipe.ID">Redigera receptet</a>
        <a asp-page="./Delete" asp-route-id="@Model.Recipe.ID">Ta bort receptet</a>
    </div>
}
else
{
    <div class="bottom-buttons">
        <a asp-page="./Index">Tillbaka till alla recept</a>
    </div>
}


